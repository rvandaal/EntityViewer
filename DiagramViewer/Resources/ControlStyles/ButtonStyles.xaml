<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DiagramViewer.Resources.ControlStyles">
    <SolidColorBrush x:Key="GeneralOutlineBrush" Color="#FF9B978E"/>
    <SolidColorBrush x:Key="CloseButtonMouseOverBrush" Color="#FFA8A49B"/>
    <SolidColorBrush x:Key="CloseButtonMouseOverHighlightBrush" Color="Black"/>
    <SolidColorBrush x:Key="CloseButtonPressedBrush" Color="Black"/>
    <SolidColorBrush x:Key="CloseButtonPressedHighlightBrush" Color="Black"/>
    <SolidColorBrush x:Key="CloseButtonIconBackgroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="CloseButtonIconOutlineBrush" Color="Black"/>
    <SolidColorBrush x:Key="CloseButtonIconMouseOverBrush" Color="Black"/>
    <SolidColorBrush x:Key="CloseButtonIconDisabledBrush" Color="Black"/>

    <StreamGeometry x:Key="CloseGeometry">M0,0 L1,1 M0,1 L1,0</StreamGeometry>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid x:Name="mouseOverGrid" Opacity="0">
                            <Rectangle x:Name="mouseOverOutlineBorder"
                                Fill="{DynamicResource GeneralOutlineBrush}"
                                RadiusX="3" RadiusY="3"/>
                            <Border x:Name="backgroundMouseOverBorder"
                                Background="{DynamicResource CloseButtonMouseOverBrush}"
                                BorderBrush="{DynamicResource CloseButtonMouseOverHighlightBrush}"
                                BorderThickness="0,1,0,0"
                                CornerRadius="2"
                                Margin="1"/>
                        </Grid>
                        <Grid x:Name="pressedGrid" Visibility="Collapsed">
                            <Rectangle x:Name="pressedOutlineBorder"
                                Fill="{DynamicResource GeneralOutlineBrush}"
                                RadiusX="3" RadiusY="3"/>
                            <Border x:Name="backgroundPressedBorder"
                                Background="{DynamicResource CloseButtonPressedBrush}"
                                BorderBrush="{DynamicResource CloseButtonPressedHighlightBrush}"
                                BorderThickness="0,1,0,0"
                                CornerRadius="2"
                                Margin="1"/>
                        </Grid>
                        <Grid x:Name="closeGeometryGrid"
                            Margin="4,5">
                            <Path x:Name="closePath"
                                Data="{StaticResource CloseGeometry}"
                                Fill="{DynamicResource CloseButtonIconBackgroundBrush}"
                                Stroke="{DynamicResource CloseButtonIconOutlineBrush}"
                                StrokeThickness="0.5"
                                Width="12"
                                Height="12"
                                Stretch="Fill"/>
                            <Path x:Name="mouseOverClosePath"
                                Opacity="0"
                                Data="{StaticResource CloseGeometry}"
                                Fill="{DynamicResource CloseButtonIconMouseOverBrush}"
                                Stroke="{DynamicResource CloseButtonIconOutlineBrush}"
                                StrokeThickness="0.5"
                                Width="12"
                                Height="12"
                                Stretch="Fill"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Trigger to handle the case that the mouse is over the button.
                             Entering and exiting the mouse over state is animated. -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="mouseOverGrid"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="00:00:00.1"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="mouseOverClosePath"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="00:00:00.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="mouseOverGrid"
                                            Storyboard.TargetProperty="Opacity" To="0"
                                            Duration="00:00:00.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="mouseOverClosePath"
                                            Storyboard.TargetProperty="Opacity" To="0"
                                            Duration="00:00:00.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!-- Trigger to handle the case that the button is pressed.
                             Entering and exiting the pressed state is not animated. -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressedGrid" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <!-- Trigger to handle the case that the button is disabled. -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="closePath" Property="Fill" Value="{DynamicResource CloseButtonIconDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>